# Name of the workflow
name: Playwright Tests

# Define the events that trigger this workflow
on:
  pull_request: # Trigger the workflow on pull requests to the main branch
    branches: [ main ]
  push: # Trigger the workflow on pushes to the main branch
    branches: [ main ]

# Define the jobs in this workflow
jobs:
  test: # Job name
    runs-on: ubuntu-latest # Use the latest Ubuntu runner provided by GitHub

    # Define the steps to execute in this job
    steps:
      # Step 1: Check out the repository code
      - uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Specify the Node.js version to use
          cache: 'npm' # Enable caching for npm dependencies

      # Step 3: Install project dependencies
      - name: Install deps
        run: npm ci # Install dependencies using npm clean install

      # Step 4: Install Playwright browsers
      - name: Install browsers
        run: npx playwright install --with-deps chromium # Install Playwright and Chromium browser dependencies

      # Step 5: Run Playwright tests
      - name: Run tests
        run: npx playwright test --reporter=json --reporter=html > results.json || true # Run tests and generate JSON and HTML reports, continue on failure

      # Step 6: Fix JSON into valid array
      - name: Normalize JSON
        run: |
          echo "[" > results_fixed.json
          sed '$!s/$/,/' results.json >> results_fixed.json
          echo "]" >> results_fixed.json
                  
      # Step 7: Extract test results from JSON
      - name: Extract Test Results
        id: results
        run: |
          passed=$(jq '[.. | .status? | select(.=="passed")] | length' results_fixed.json)
          failed=$(jq '[.. | .status? | select(.=="failed")] | length' results_fixed.json)
          skipped=$(jq '[.. | .status? | select(.=="skipped")] | length' results_fixed.json)

          echo "passed=$passed" >> $GITHUB_OUTPUT
          echo "failed=$failed" >> $GITHUB_OUTPUT
          echo "skipped=$skipped" >> $GITHUB_OUTPUT

      # Step 8: Upload playwright json results as artifacts     
      - name: Upload Playwright JSON results
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: results.json
          retention-days: 7

      # Step 9: Upload playwright html report as artifacts      
      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html-report
          path: playwright-report/
          retention-days: 7
        

      # Step 8: Slack Notification
      - name: Notify Slack
        if: always()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{
            \"text\": \"Playwright CI Results\n\n:white_check_mark: Passed: *${{ steps.results.outputs.passed }}*\n:x: Failed: *${{ steps.results.outputs.failed }}*\n:fast_forward: Skipped: *${{ steps.results.outputs.skipped }}*\n\n*Repo*: ${{ github.repository }}\n*Branch*: ${{ github.ref_name }}\n*Author*: ${{ github.actor }}\n\n:page_facing_up: *HTML Report*: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|Download Artifact>\n\n*Logs*: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Logs>\"
          }" \
          ${{ secrets.SLACK_WEBHOOK_URL }}